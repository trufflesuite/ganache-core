{
	"id": 0,
	"name": "@ganache/ethereum",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "\"api\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/david/work/ganache-core/src/chains/ethereum/ethereum/src/api.ts",
			"children": [
				{
					"id": 2,
					"name": "EthereumApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"indexSignature": [
						{
							"id": 3,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 4,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 6,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 7,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isRest": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise"
											}
										}
									],
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 110,
											"character": 27
										}
									]
								}
							}
						}
					],
					"children": [
						{
							"id": 21,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This is the Ethereum API that the provider interacts with.\nThe only methods permitted on the prototype are the supported json-rpc\nmethods."
							},
							"signatures": [
								{
									"id": 22,
									"name": "new EthereumApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "This is the Ethereum API that the provider interacts with.\nThe only methods permitted on the prototype are the supported json-rpc\nmethods."
									},
									"parameters": [
										{
											"id": 23,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "EthereumInternalOptions"
											}
										},
										{
											"id": 24,
											"name": "wallet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Wallet"
											}
										},
										{
											"id": 25,
											"name": "blockchain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Blockchain"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2,
										"name": "EthereumApi"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 117,
									"character": 27
								}
							]
						},
						{
							"id": 19,
							"name": "#blockchain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 116,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "Blockchain"
							}
						},
						{
							"id": 9,
							"name": "#filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 113,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 10,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 14,
													"name": "filter",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "chains/ethereum/utils/typings/src/types/filters.d.ts",
															"line": 26,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"name": "FilterArgs"
													}
												},
												{
													"id": 11,
													"name": "type",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "chains/ethereum/utils/typings/src/types/filters.d.ts",
															"line": 23,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "FilterTypes"
													}
												},
												{
													"id": 13,
													"name": "unsubscribe",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "chains/ethereum/utils/typings/src/types/filters.d.ts",
															"line": 25,
															"character": 15
														}
													],
													"type": {
														"type": "reference",
														"name": "Emittery.UnsubscribeFn"
													}
												},
												{
													"id": 12,
													"name": "updates",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "chains/ethereum/utils/typings/src/types/filters.d.ts",
															"line": 24,
															"character": 11
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Data"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														14,
														11,
														13,
														12
													]
												}
											]
										}
									}
								],
								"name": "Map"
							},
							"defaultValue": "new Map<string, Filter>()"
						},
						{
							"id": 8,
							"name": "#getId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 112,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							},
							"defaultValue": "(id => () => Quantity.from(++id))(0)"
						},
						{
							"id": 18,
							"name": "#options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 115,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "EthereumInternalOptions"
							}
						},
						{
							"id": 15,
							"name": "#subscriptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 114,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 16,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								],
								"name": "Map"
							},
							"defaultValue": "new Map<string, Emittery.UnsubscribeFn>()"
						},
						{
							"id": 20,
							"name": "#wallet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 117,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Wallet"
							}
						},
						{
							"id": 44,
							"name": "bzz_hive",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 45,
									"name": "bzz_hive",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 191,
									"character": 16
								}
							]
						},
						{
							"id": 46,
							"name": "bzz_info",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 47,
									"name": "bzz_info",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 196,
									"character": 16
								}
							]
						},
						{
							"id": 40,
							"name": "db_getHex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 41,
									"name": "db_getHex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns binary data from the local database",
										"returns": "The previously stored data.\n"
									},
									"parameters": [
										{
											"id": 42,
											"name": "dbName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Database name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Key name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 184,
									"character": 17
								}
							]
						},
						{
							"id": 31,
							"name": "db_getString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 32,
									"name": "db_getString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns string from the local database",
										"returns": "The previously stored string.\n"
									},
									"parameters": [
										{
											"id": 33,
											"name": "dbName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Database name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Key name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 159,
									"character": 20
								}
							]
						},
						{
							"id": 35,
							"name": "db_putHex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "3"
									}
								}
							],
							"signatures": [
								{
									"id": 36,
									"name": "db_putHex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Stores binary data in the local database.",
										"returns": "true if the value was stored, otherwise false.\n"
									},
									"parameters": [
										{
											"id": 37,
											"name": "dbName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Database name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 38,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Key name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Data to store."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 172,
									"character": 17
								}
							]
						},
						{
							"id": 26,
							"name": "db_putString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "3"
									}
								}
							],
							"signatures": [
								{
									"id": 27,
									"name": "db_putString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Stores a string in the local database.",
										"returns": "returns true if the value was stored, otherwise false.\n"
									},
									"parameters": [
										{
											"id": 28,
											"name": "dbName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Database name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Key name."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "String to store."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 147,
									"character": 20
								}
							]
						},
						{
							"id": 326,
							"name": "debug_storageRangeAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 327,
									"name": "debug_storageRangeAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Attempts to replay the transaction as it was executed on the network and\nreturn storage data given a starting key and max number of entries to return.",
										"returns": "returns a storage object with the keys being keccak-256 hashes of the storage keys,\nand the values being the raw, un-hashed key and value for that specific storage slot. Also\nreturns a next key which is the keccak-256 hash of the next key in storage for continuous downloading.\n"
									},
									"parameters": [
										{
											"id": 328,
											"name": "blockHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "DATA, 32 Bytes - hash of a block"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										},
										{
											"id": 329,
											"name": "transactionIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "QUANTITY - the index of the transaction in the block"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 330,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "DATA, 20 Bytes - address of the contract"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 331,
											"name": "startKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "hash of the start key for grabbing storage entries"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										},
										{
											"id": 332,
											"name": "maxResult",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "integer of maximum number of storage entries to return"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "StorageRangeResult"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1713,
									"character": 28
								}
							]
						},
						{
							"id": 308,
							"name": "debug_traceTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 309,
									"name": "debug_traceTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Attempt to run the transaction in the exact same manner as it was executed\non the network. It will replay any transaction that may have been executed\nprior to this one before it will finally attempt to execute the transaction\nthat corresponds to the given hash.",
										"text": "In addition to the hash of the transaction you may give it a secondary\noptional argument, which specifies the options for this specific call.\nThe possible options are:\n\n* `disableStorage`: \\{boolean\\} Setting this to `true` will disable storage capture (default = `false`).\n* `disableMemory`: \\{boolean\\} Setting this to `true` will disable memory capture (default = `false`).\n* `disableStack`: \\{boolean\\} Setting this to `true` will disable stack capture (default = `false`).\n",
										"returns": "returns comment",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\n// Simple.sol\n// // SPDX-License-Identifier: MIT\n//  pragma solidity ^0.7.4;\n//\n//  contract Simple {\n//      uint256 public value;\n//      constructor() payable {\n//          value = 5;\n//      }\n//  }\nconst simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\nconst [from] = await provider.request({ method: \"eth_accounts\", params: [] });\nawait provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\nconst txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\nconst transactionTrace = await provider.request({ method: \"debug_traceTransaction\", params: [txHash] });\nconsole.log(transactionTrace);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 310,
											"name": "transactionHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "transactionHash"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 311,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "options"
											},
											"type": {
												"type": "reference",
												"name": "TransactionTraceOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 312,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 313,
															"name": "gas",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/blockchain.ts",
																	"line": 1311,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 325,
															"name": "returnValue",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/blockchain.ts",
																	"line": 1311,
																	"character": 41
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 314,
															"name": "structLogs",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/blockchain.ts",
																	"line": 1311,
																	"character": 28
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reflection",
																	"declaration": {
																		"id": 315,
																		"name": "__type",
																		"kind": 65536,
																		"kindString": "Type literal",
																		"flags": {
																			"isExported": true
																		},
																		"children": [
																			{
																				"id": 316,
																				"name": "depth",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/ethereum/src/blockchain.ts",
																						"line": 88,
																						"character": 7
																					}
																				],
																				"type": {
																					"type": "intrinsic",
																					"name": "number"
																				}
																			},
																			{
																				"id": 317,
																				"name": "error",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/ethereum/src/blockchain.ts",
																						"line": 89,
																						"character": 7
																					}
																				],
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			},
																			{
																				"id": 318,
																				"name": "gas",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/ethereum/src/blockchain.ts",
																						"line": 90,
																						"character": 5
																					}
																				],
																				"type": {
																					"type": "intrinsic",
																					"name": "number"
																				}
																			},
																			{
																				"id": 319,
																				"name": "gasCost",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/ethereum/src/blockchain.ts",
																						"line": 91,
																						"character": 9
																					}
																				],
																				"type": {
																					"type": "intrinsic",
																					"name": "number"
																				}
																			},
																			{
																				"id": 320,
																				"name": "memory",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/ethereum/src/blockchain.ts",
																						"line": 92,
																						"character": 8
																					}
																				],
																				"type": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"name": "ITraceData"
																						}
																					],
																					"name": "Array"
																				}
																			},
																			{
																				"id": 321,
																				"name": "op",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/ethereum/src/blockchain.ts",
																						"line": 93,
																						"character": 4
																					}
																				],
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			},
																			{
																				"id": 322,
																				"name": "pc",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/ethereum/src/blockchain.ts",
																						"line": 94,
																						"character": 4
																					}
																				],
																				"type": {
																					"type": "intrinsic",
																					"name": "number"
																				}
																			},
																			{
																				"id": 323,
																				"name": "stack",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/ethereum/src/blockchain.ts",
																						"line": 95,
																						"character": 7
																					}
																				],
																				"type": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"name": "ITraceData"
																						}
																					],
																					"name": "Array"
																				}
																			},
																			{
																				"id": 324,
																				"name": "storage",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/ethereum/src/blockchain.ts",
																						"line": 96,
																						"character": 9
																					}
																				],
																				"type": {
																					"type": "reference",
																					"name": "TraceStorageMap"
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Variables",
																				"kind": 32,
																				"children": [
																					316,
																					317,
																					318,
																					319,
																					320,
																					321,
																					322,
																					323,
																					324
																				]
																			}
																		]
																	}
																}
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																313,
																325,
																314
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1693,
									"character": 30
								}
							]
						},
						{
							"id": 175,
							"name": "eth_accounts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 176,
									"name": "eth_accounts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns a list of addresses owned by client.",
										"returns": "Array of 20 Bytes - addresses owned by the client.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 944,
									"character": 20
								}
							]
						},
						{
							"id": 177,
							"name": "eth_blockNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 178,
									"name": "eth_blockNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of the most recent block.",
										"returns": "integer of the current block number the client is on.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 953,
									"character": 23
								}
							]
						},
						{
							"id": 304,
							"name": "eth_call",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 305,
									"name": "eth_call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Executes a new message call immediately without creating a transaction on the block chain.",
										"returns": "the return value of executed contract.\n"
									},
									"parameters": [
										{
											"id": 306,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "transaction"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 307,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "blockNumber\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											},
											"defaultValue": "Tag.LATEST"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1591,
									"character": 16
								}
							]
						},
						{
							"id": 179,
							"name": "eth_chainId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 180,
									"name": "eth_chainId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the currently configured chain id, a value used in\nreplay-protected transaction signing as introduced by EIP-155.",
										"returns": "The chain id as a string.",
										"tags": [
											{
												"tag": "eip",
												"text": "[155 – Simple replay attack protection](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md)\n"
											},
											{
												"tag": "example",
												"text": "\n```javascript\nconst chainId = await provider.send(\"eth_chainId\");\nconsole.log(chainId);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 970,
									"character": 19
								}
							]
						},
						{
							"id": 117,
							"name": "eth_coinbase",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 118,
									"name": "eth_coinbase",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the client coinbase address.",
										"returns": "20 bytes - the current coinbase address.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 723,
									"character": 20
								}
							]
						},
						{
							"id": 109,
							"name": "eth_estimateGas",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 110,
									"name": "eth_estimateGas",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Generates and returns an estimate of how much gas is necessary to allow the\ntransaction to complete. The transaction will not be added to the\nblockchain. Note that the estimate may be significantly more than the\namount of gas actually used by the transaction, for a variety of reasons\nincluding EVM mechanics and node performance.",
										"returns": "the amount of gas used.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst accounts = await provider.request({ method: \"eth_accounts\", params: [] });\nconst gasEstimate = await provider.request({ method: \"eth_estimateGas\", params: [{ from: accounts[0], to: accounts[1] }, \"latest\" ] });\nconsole.log(gasEstimate);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 111,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "RpcTransaction"
											}
										},
										{
											"id": 112,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											},
											"defaultValue": "Tag.LATEST"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 650,
									"character": 23
								}
							]
						},
						{
							"id": 173,
							"name": "eth_gasPrice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 174,
									"name": "eth_gasPrice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the current price per gas in wei.",
										"returns": "integer of the current gas price in wei.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 935,
									"character": 20
								}
							]
						},
						{
							"id": 181,
							"name": "eth_getBalance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 182,
									"name": "eth_getBalance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the balance of the account of given address."
									},
									"parameters": [
										{
											"id": 183,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "20 Bytes - address to check for balance."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 184,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "integer block number, or the string \"latest\", \"earliest\"\n or \"pending\", see the default block parameter\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											},
											"defaultValue": "Tag.LATEST"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 981,
									"character": 22
								}
							]
						},
						{
							"id": 123,
							"name": "eth_getBlockByHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 124,
									"name": "eth_getBlockByHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns information about a block by block hash.",
										"returns": "Block\n"
									},
									"parameters": [
										{
											"id": 125,
											"name": "hash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										},
										{
											"id": 126,
											"name": "transactions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Boolean - If true it returns the full transaction objects, if false only the hashes of the\ntransactions."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 750,
									"character": 26
								}
							]
						},
						{
							"id": 119,
							"name": "eth_getBlockByNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 120,
									"name": "eth_getBlockByNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns information about a block by block number.",
										"returns": "the block, `null` if the block doesn't exist.\n"
									},
									"parameters": [
										{
											"id": 121,
											"name": "number",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "QUANTITY|TAG - integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\ndefault block parameter."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											}
										},
										{
											"id": 122,
											"name": "transactions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Boolean - If true it returns the full transaction objects, if false only the hashes of the\ntransactions."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 736,
									"character": 28
								}
							]
						},
						{
							"id": 130,
							"name": "eth_getBlockTransactionCountByHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 131,
									"name": "eth_getBlockTransactionCountByHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of transactions in a block from a block matching the given block hash."
									},
									"parameters": [
										{
											"id": 132,
											"name": "hash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "DATA, 32 Bytes - hash of a block.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 778,
									"character": 42
								}
							]
						},
						{
							"id": 127,
							"name": "eth_getBlockTransactionCountByNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 128,
									"name": "eth_getBlockTransactionCountByNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of transactions in a block from a block matching the given block number."
									},
									"parameters": [
										{
											"id": 129,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 763,
									"character": 44
								}
							]
						},
						{
							"id": 185,
							"name": "eth_getCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 186,
									"name": "eth_getCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns code at a given address.",
										"returns": "the code from the given address.\n"
									},
									"parameters": [
										{
											"id": 187,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "20 Bytes - address"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block\nparameter"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											},
											"defaultValue": "Tag.LATEST"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1000,
									"character": 19
								}
							]
						},
						{
							"id": 133,
							"name": "eth_getCompilers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 134,
									"name": "eth_getCompilers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 791,
									"character": 24
								}
							]
						},
						{
							"id": 268,
							"name": "eth_getFilterChanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 269,
									"name": "eth_getFilterChanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Polling method for a filter, which returns an array of logs, block hashes,\nor transaction hashes, depending on the filter type, which occurred since\nlast poll.",
										"returns": "an array of logs, block hashes, or transaction hashes, depending\non the filter type, which occurred since last poll.\n"
									},
									"parameters": [
										{
											"id": 270,
											"name": "filterId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the filter id."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Data"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1510,
									"character": 28
								}
							]
						},
						{
							"id": 274,
							"name": "eth_getFilterLogs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 275,
									"name": "eth_getFilterLogs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns an array of all logs matching filter with given id.",
										"returns": "Array of log objects, or an empty array.\n"
									},
									"parameters": [
										{
											"id": 276,
											"name": "filterId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 277,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {
															"isExported": true
														},
														"children": [
															{
																"id": 278,
																"name": "address",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 121,
																		"character": 15
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Address"
																}
															},
															{
																"id": 279,
																"name": "blockHash",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 122,
																		"character": 17
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Data"
																}
															},
															{
																"id": 280,
																"name": "blockNumber",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 123,
																		"character": 19
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Quantity"
																}
															},
															{
																"id": 281,
																"name": "data",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 124,
																		"character": 12
																	}
																],
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reference",
																			"name": "Data"
																		},
																		{
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"name": "Data"
																			}
																		}
																	]
																}
															},
															{
																"id": 282,
																"name": "logIndex",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 125,
																		"character": 16
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Quantity"
																}
															},
															{
																"id": 283,
																"name": "removed",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 126,
																		"character": 15
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 284,
																"name": "topics",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 127,
																		"character": 14
																	}
																],
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reference",
																			"name": "Data"
																		},
																		{
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"name": "Data"
																			}
																		}
																	]
																}
															},
															{
																"id": 285,
																"name": "transactionHash",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 128,
																		"character": 23
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Data"
																}
															},
															{
																"id": 286,
																"name": "transactionIndex",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 129,
																		"character": 24
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Quantity"
																}
															}
														],
														"groups": [
															{
																"title": "Variables",
																"kind": 32,
																"children": [
																	278,
																	279,
																	280,
																	281,
																	282,
																	283,
																	284,
																	285,
																	286
																]
															}
														]
													}
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1543,
									"character": 25
								}
							]
						},
						{
							"id": 287,
							"name": "eth_getLogs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 288,
									"name": "eth_getLogs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns an array of all logs matching a given filter object.",
										"returns": "Array of log objects, or an empty array.\n"
									},
									"parameters": [
										{
											"id": 289,
											"name": "filter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The filter options"
											},
											"type": {
												"type": "reference",
												"name": "FilterArgs"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 290,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {
															"isExported": true
														},
														"children": [
															{
																"id": 291,
																"name": "address",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 121,
																		"character": 15
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Address"
																}
															},
															{
																"id": 292,
																"name": "blockHash",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 122,
																		"character": 17
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Data"
																}
															},
															{
																"id": 293,
																"name": "blockNumber",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 123,
																		"character": 19
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Quantity"
																}
															},
															{
																"id": 294,
																"name": "data",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 124,
																		"character": 12
																	}
																],
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reference",
																			"name": "Data"
																		},
																		{
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"name": "Data"
																			}
																		}
																	]
																}
															},
															{
																"id": 295,
																"name": "logIndex",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 125,
																		"character": 16
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Quantity"
																}
															},
															{
																"id": 296,
																"name": "removed",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 126,
																		"character": 15
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 297,
																"name": "topics",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 127,
																		"character": 14
																	}
																],
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reference",
																			"name": "Data"
																		},
																		{
																			"type": "array",
																			"elementType": {
																				"type": "reference",
																				"name": "Data"
																			}
																		}
																	]
																}
															},
															{
																"id": 298,
																"name": "transactionHash",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 128,
																		"character": 23
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Data"
																}
															},
															{
																"id": 299,
																"name": "transactionIndex",
																"kind": 32,
																"kindString": "Variable",
																"flags": {
																	"isExported": true
																},
																"sources": [
																	{
																		"fileName": "chains/ethereum/utils/typings/src/things/blocklogs.d.ts",
																		"line": 129,
																		"character": 24
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "Quantity"
																}
															}
														],
														"groups": [
															{
																"title": "Variables",
																"kind": 32,
																"children": [
																	291,
																	292,
																	293,
																	294,
																	295,
																	296,
																	297,
																	298,
																	299
																]
															}
														]
													}
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1559,
									"character": 19
								}
							]
						},
						{
							"id": 189,
							"name": "eth_getStorageAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2",
										"max": "3"
									}
								}
							],
							"signatures": [
								{
									"id": 190,
									"name": "eth_getStorageAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the value from a storage position at a given address."
									},
									"parameters": [
										{
											"id": 191,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 192,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 193,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "integer block number, or the string \"latest\", \"earliest\"\n or \"pending\", see the default block parameter\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											},
											"defaultValue": "Tag.LATEST"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1013,
									"character": 24
								}
							]
						},
						{
							"id": 135,
							"name": "eth_getTransactionByBlockHashAndIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 136,
									"name": "eth_getTransactionByBlockHashAndIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns information about a transaction by block hash and transaction index position."
									},
									"parameters": [
										{
											"id": 137,
											"name": "hash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "DATA, 32 Bytes - hash of a block."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										},
										{
											"id": 138,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "QUANTITY - integer of the transaction index position.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 801,
									"character": 45
								}
							]
						},
						{
							"id": 139,
							"name": "eth_getTransactionByBlockNumberAndIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 140,
									"name": "eth_getTransactionByBlockNumberAndIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns information about a transaction by block number and transaction index position."
									},
									"parameters": [
										{
											"id": 141,
											"name": "number",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "QUANTITY|TAG - a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the default\nblock parameter."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											}
										},
										{
											"id": 142,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "QUANTITY - integer of the transaction index position.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 820,
									"character": 47
								}
							]
						},
						{
							"id": 194,
							"name": "eth_getTransactionByHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 195,
									"name": "eth_getTransactionByHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the information about a transaction requested by transaction hash."
									},
									"parameters": [
										{
											"id": 196,
											"name": "transactionHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "32 Bytes - hash of a transaction\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 197,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 200,
															"name": "blockHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 184,
																	"character": 17
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 201,
															"name": "blockNumber",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 185,
																	"character": 19
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 203,
															"name": "from",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 187,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 206,
															"name": "gas",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 190,
																	"character": 11
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 207,
															"name": "gasPrice",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 191,
																	"character": 16
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 198,
															"name": "hash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 182,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 208,
															"name": "input",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 192,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 199,
															"name": "nonce",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 183,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 210,
															"name": "r",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 194,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 211,
															"name": "s",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 195,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 204,
															"name": "to",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 188,
																	"character": 10
																}
															],
															"type": {
																"type": "reference",
																"name": "Address"
															}
														},
														{
															"id": 202,
															"name": "transactionIndex",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 186,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 209,
															"name": "v",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 193,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 205,
															"name": "value",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/runtime-transaction.d.ts",
																	"line": 189,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																200,
																201,
																203,
																206,
																207,
																198,
																208,
																199,
																210,
																211,
																204,
																202,
																209,
																205
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1059,
									"character": 32
								}
							]
						},
						{
							"id": 300,
							"name": "eth_getTransactionCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 301,
									"name": "eth_getTransactionCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of transactions sent from an address.",
										"returns": "integer of the number of transactions sent from this address.\n"
									},
									"parameters": [
										{
											"id": 302,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "address"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 303,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "integer block number, or the string \"latest\", \"earliest\"\nor \"pending\", see the default block parameter"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											},
											"defaultValue": "Tag.LATEST"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1572,
									"character": 31
								}
							]
						},
						{
							"id": 212,
							"name": "eth_getTransactionReceipt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 213,
									"name": "eth_getTransactionReceipt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the receipt of a transaction by transaction hash.",
										"text": "Note That the receipt is not available for pending transactions.\n",
										"returns": "Returns the receipt of a transaction by transaction hash.\n"
									},
									"parameters": [
										{
											"id": 214,
											"name": "transactionHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "32 Bytes - hash of a transaction"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 215,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 219,
															"name": "blockHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																	"line": 32,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 218,
															"name": "blockNumber",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																	"line": 31,
																	"character": 19
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 224,
															"name": "contractAddress",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																	"line": 37,
																	"character": 23
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 222,
															"name": "cumulativeGasUsed",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																	"line": 35,
																	"character": 25
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 220,
															"name": "from",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																	"line": 33,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 223,
															"name": "gasUsed",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																	"line": 36,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 225,
															"name": "logs",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																	"line": 38,
																	"character": 12
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reflection",
																	"declaration": {
																		"id": 226,
																		"name": "__type",
																		"kind": 65536,
																		"kindString": "Type literal",
																		"flags": {
																			"isExported": true
																		},
																		"children": [
																			{
																				"id": 227,
																				"name": "address",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																						"line": 39,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "reference",
																					"name": "Address"
																				}
																			},
																			{
																				"id": 228,
																				"name": "blockHash",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																						"line": 40,
																						"character": 21
																					}
																				],
																				"type": {
																					"type": "reference",
																					"name": "Data"
																				}
																			},
																			{
																				"id": 229,
																				"name": "blockNumber",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																						"line": 41,
																						"character": 23
																					}
																				],
																				"type": {
																					"type": "reference",
																					"name": "Quantity"
																				}
																			},
																			{
																				"id": 230,
																				"name": "data",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																						"line": 42,
																						"character": 16
																					}
																				],
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "reference",
																							"name": "Data"
																						},
																						{
																							"type": "array",
																							"elementType": {
																								"type": "reference",
																								"name": "Data"
																							}
																						}
																					]
																				}
																			},
																			{
																				"id": 231,
																				"name": "logIndex",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																						"line": 43,
																						"character": 20
																					}
																				],
																				"type": {
																					"type": "reference",
																					"name": "Quantity"
																				}
																			},
																			{
																				"id": 232,
																				"name": "removed",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																						"line": 44,
																						"character": 19
																					}
																				],
																				"type": {
																					"type": "intrinsic",
																					"name": "boolean"
																				}
																			},
																			{
																				"id": 233,
																				"name": "topics",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																						"line": 45,
																						"character": 18
																					}
																				],
																				"type": {
																					"type": "union",
																					"types": [
																						{
																							"type": "reference",
																							"name": "Data"
																						},
																						{
																							"type": "array",
																							"elementType": {
																								"type": "reference",
																								"name": "Data"
																							}
																						}
																					]
																				}
																			},
																			{
																				"id": 234,
																				"name": "transactionHash",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																						"line": 46,
																						"character": 27
																					}
																				],
																				"type": {
																					"type": "reference",
																					"name": "Data"
																				}
																			},
																			{
																				"id": 235,
																				"name": "transactionIndex",
																				"kind": 32,
																				"kindString": "Variable",
																				"flags": {
																					"isExported": true
																				},
																				"sources": [
																					{
																						"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																						"line": 47,
																						"character": 28
																					}
																				],
																				"type": {
																					"type": "reference",
																					"name": "Quantity"
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Variables",
																				"kind": 32,
																				"children": [
																					227,
																					228,
																					229,
																					230,
																					231,
																					232,
																					233,
																					234,
																					235
																				]
																			}
																		],
																		"sources": [
																			{
																				"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																				"line": 38,
																				"character": 13
																			}
																		]
																	}
																}
															}
														},
														{
															"id": 236,
															"name": "logsBloom",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																	"line": 49,
																	"character": 17
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 237,
															"name": "status",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																	"line": 50,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														},
														{
															"id": 221,
															"name": "to",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																	"line": 34,
																	"character": 10
																}
															],
															"type": {
																"type": "reference",
																"name": "Address"
															}
														},
														{
															"id": 216,
															"name": "transactionHash",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																	"line": 29,
																	"character": 23
																}
															],
															"type": {
																"type": "reference",
																"name": "Data"
															}
														},
														{
															"id": 217,
															"name": "transactionIndex",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/transaction/typings/src/transaction-receipt.d.ts",
																	"line": 30,
																	"character": 24
																}
															],
															"type": {
																"type": "reference",
																"name": "Quantity"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																219,
																218,
																224,
																222,
																220,
																223,
																225,
																236,
																237,
																221,
																216,
																217
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1086,
									"character": 33
								}
							]
						},
						{
							"id": 149,
							"name": "eth_getUncleByBlockHashAndIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 150,
									"name": "eth_getUncleByBlockHashAndIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns information about a uncle of a block by hash and uncle index position."
									},
									"parameters": [
										{
											"id": 151,
											"name": "hash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "hash of a block"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 152,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the uncle's index position.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 853,
									"character": 39
								}
							]
						},
						{
							"id": 153,
							"name": "eth_getUncleByBlockNumberAndIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 154,
									"name": "eth_getUncleByBlockNumberAndIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns information about a uncle of a block by hash and uncle index position."
									},
									"parameters": [
										{
											"id": 155,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the default block\nparameter."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											}
										},
										{
											"id": 156,
											"name": "uncleIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the uncle's index position.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 865,
									"character": 41
								}
							]
						},
						{
							"id": 143,
							"name": "eth_getUncleCountByBlockHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 144,
									"name": "eth_getUncleCountByBlockHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of uncles in a block from a block matching the given block hash."
									},
									"parameters": [
										{
											"id": 145,
											"name": "hash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "DATA, 32 Bytes - hash of a block.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 833,
									"character": 36
								}
							]
						},
						{
							"id": 146,
							"name": "eth_getUncleCountByBlockNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 147,
									"name": "eth_getUncleCountByBlockNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of uncles in a block from a block matching the given block hash."
									},
									"parameters": [
										{
											"id": 148,
											"name": "number",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 842,
									"character": 38
								}
							]
						},
						{
							"id": 157,
							"name": "eth_getWork",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 158,
									"name": "eth_getWork",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns: An Array with the following elements\n1: DATA, 32 Bytes - current block header pow-hash\n2: DATA, 32 Bytes - the seed hash used for the DAG.\n3: DATA, 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.",
										"returns": "the hash of the current block, the seedHash, and the boundary condition to be met (\"target\").\n"
									},
									"parameters": [
										{
											"id": 159,
											"name": "filterId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "tuple"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 882,
									"character": 19
								}
							]
						},
						{
							"id": 171,
							"name": "eth_hashrate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 172,
									"name": "eth_hashrate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the number of hashes per second that the node is mining with.",
										"returns": "number of hashes per second.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 926,
									"character": 20
								}
							]
						},
						{
							"id": 169,
							"name": "eth_mining",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 170,
									"name": "eth_mining",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns `true` if client is actively mining new blocks.",
										"returns": "returns `true` if the client is mining, otherwise `false`.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 916,
									"character": 18
								}
							]
						},
						{
							"id": 261,
							"name": "eth_newBlockFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 262,
									"name": "eth_newBlockFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a filter in the node, to notify when a new block arrives. To check\nif the state has changed, call `eth_getFilterChanges`.",
										"returns": "A filter id.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1414,
									"character": 26
								}
							]
						},
						{
							"id": 265,
							"name": "eth_newFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0",
										"max": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 266,
									"name": "eth_newFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a filter object, based on filter options, to notify when the state\nchanges (logs). To check if the state has changed, call\n`eth_getFilterChanges`.",
										"text": "If the from `fromBlock` or `toBlock` option are equal to \"latest\" the\nfilter continually append logs for whatever block is seen as latest at the\ntime the block was mined, not just for the block that was \"latest\" when the\nfilter was created.\n\n### A note on specifying topic filters:\nTopics are order-dependent. A transaction with a log with topics [A, B]\nwill be matched by the following topic filters:\n * `[]` “anything”\n * `[A]` “A in first position (and anything after)”\n * `[null, B]` “anything in first position AND B in second position (and\nanything after)”\n * `[A, B]` “A in first position AND B in second position (and anything\nafter)”\n * `[[A, B], [A, B]]` “(A OR B) in first position AND (A OR B) in second\nposition (and anything after)”\n"
									},
									"parameters": [
										{
											"id": 267,
											"name": "filter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The filter options\n"
											},
											"type": {
												"type": "reference",
												"name": "RangeFilterArgs"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1479,
									"character": 21
								}
							]
						},
						{
							"id": 263,
							"name": "eth_newPendingTransactionFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 264,
									"name": "eth_newPendingTransactionFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a filter in the node, to notify when new pending transactions\narrive. To check if the state has changed, call `eth_getFilterChanges`.",
										"returns": "A filter id.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1436,
									"character": 39
								}
							]
						},
						{
							"id": 113,
							"name": "eth_protocolVersion",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 114,
									"name": "eth_protocolVersion",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the current ethereum protocol version.",
										"returns": "The current ethereum protocol version.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 701,
									"character": 27
								}
							]
						},
						{
							"id": 241,
							"name": "eth_sendRawTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 242,
									"name": "eth_sendRawTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates new message call transaction or a contract creation for signed transactions.",
										"returns": "The transaction hash\n"
									},
									"parameters": [
										{
											"id": 243,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1178,
									"character": 30
								}
							]
						},
						{
							"id": 238,
							"name": "eth_sendTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 239,
									"name": "eth_sendTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates new message call transaction or a contract creation, if the data field contains code.",
										"returns": "The transaction hash\n"
									},
									"parameters": [
										{
											"id": 240,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "RpcTransaction"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1131,
									"character": 27
								}
							]
						},
						{
							"id": 244,
							"name": "eth_sign",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 245,
									"name": "eth_sign",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The sign method calculates an Ethereum specific signature with:\n`sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + message.length + message)))`.",
										"text": "By adding a prefix to the message makes the calculated signature\nrecognizable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data\n (e.g. transaction) and use the signature to impersonate the victim.\n\nNote the address to sign with must be unlocked.\n",
										"returns": "Signature\n"
									},
									"parameters": [
										{
											"id": 246,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										},
										{
											"id": 247,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1201,
									"character": 16
								}
							]
						},
						{
							"id": 248,
							"name": "eth_signTypedData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 249,
									"name": "eth_signTypedData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"returns": "Signature. As in `eth_sign`, it is a hex encoded 129 byte array\nstarting with `0x`. It encodes the `r`, `s`, and `v` parameters from\nappendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n64...128 the `s` parameter, and the last byte the `v` parameter. Note\nthat the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).",
										"tags": [
											{
												"tag": "eip",
												"text": "[712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n"
											}
										]
									},
									"parameters": [
										{
											"id": 250,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Address of the account that will sign the messages."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										},
										{
											"id": 251,
											"name": "typedData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Typed structured data to be signed."
											},
											"type": {
												"type": "reference",
												"id": 402,
												"name": "TypedData"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1228,
									"character": 25
								}
							]
						},
						{
							"id": 165,
							"name": "eth_submitHashrate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 166,
									"name": "eth_submitHashrate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Used for submitting mining hashrate.",
										"returns": "`true` if submitting went through successfully and `false` otherwise.\n"
									},
									"parameters": [
										{
											"id": 167,
											"name": "hashRate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "a hexadecimal string representation (32 bytes) of the hash rate"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 168,
											"name": "clientID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "a random hexadecimal(32 bytes) ID identifying the client"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 907,
									"character": 26
								}
							]
						},
						{
							"id": 160,
							"name": "eth_submitWork",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "3"
									}
								}
							],
							"signatures": [
								{
									"id": 161,
									"name": "eth_submitWork",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Used for submitting a proof-of-work solution",
										"returns": "`true` if the provided solution is valid, otherwise `false`.\n"
									},
									"parameters": [
										{
											"id": 162,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "{DATA, 8 Bytes} The nonce found (64 bits)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 163,
											"name": "powHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "{DATA, 32 Bytes} The header's pow-hash (256 bits)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 164,
											"name": "digest",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "{DATA, 32 Bytes} The mix digest (256 bits)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 895,
									"character": 22
								}
							]
						},
						{
							"id": 252,
							"name": "eth_subscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1",
										"max": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 253,
									"name": "eth_subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Starts a subscription to a particular event. For every event that matches\nthe subscription a JSON-RPC notification with event details and\nsubscription ID will be sent to a client.",
										"returns": "A subscription id.\n"
									},
									"parameters": [
										{
											"id": 254,
											"name": "subscriptionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "SubscriptionName"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "PromiEvent"
									}
								},
								{
									"id": 255,
									"name": "eth_subscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Starts a subscription to a particular event. For every event that matches\nthe subscription a JSON-RPC notification with event details and\nsubscription ID will be sent to a client.",
										"returns": "A subscription id.\n"
									},
									"parameters": [
										{
											"id": 256,
											"name": "subscriptionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SubscriptionName"
													},
													{
														"type": "stringLiteral",
														"value": "logs"
													}
												],
												"name": "Extract"
											}
										},
										{
											"id": 257,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Filter options:\n * `address`: either an address or an array of addresses. Only logs that\n   are created from these addresses are returned\n * `topics`, only logs which match the specified topics"
											},
											"type": {
												"type": "reference",
												"name": "BaseFilterArgs"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "PromiEvent"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1267,
									"character": 15
								},
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1280,
									"character": 15
								},
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1285,
									"character": 15
								}
							]
						},
						{
							"id": 115,
							"name": "eth_syncing",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 116,
									"name": "eth_syncing",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns an object with data about the sync status or false.",
										"returns": "An object with sync status data or false, when not syncing:\n  startingBlock: \\{bigint\\} - The block at which the import started (will\n   only be reset, after the sync reached his head)\n  currentBlock: \\{bigint\\} - The current block, same as eth_blockNumber\n  highestBlock: \\{bigint\\} - The estimated highest block\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 714,
									"character": 19
								}
							]
						},
						{
							"id": 271,
							"name": "eth_uninstallFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 272,
									"name": "eth_uninstallFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Uninstalls a filter with given id. Should always be called when watch is\nno longer needed.",
										"returns": "`true` if the filter was successfully uninstalled, otherwise\n`false`.\n"
									},
									"parameters": [
										{
											"id": 273,
											"name": "filterId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the filter id."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1530,
									"character": 27
								}
							]
						},
						{
							"id": 258,
							"name": "eth_unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 259,
									"name": "eth_unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 260,
											"name": "subscriptionId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "SubscriptionId"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1395,
									"character": 23
								}
							]
						},
						{
							"id": 66,
							"name": "evm_increaseTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 67,
									"name": "evm_increaseTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Jump forward in time by the given amount of time, in seconds.",
										"returns": "Returns the total time adjustment, in seconds.\n"
									},
									"parameters": [
										{
											"id": 68,
											"name": "seconds",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Must be greater than or equal to `0`"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 351,
									"character": 24
								}
							]
						},
						{
							"id": 81,
							"name": "evm_lockUnknownAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 82,
									"name": "evm_lockUnknownAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Locks any unknown account.",
										"text": "Note: accounts known to the `personal` namespace and accounts returned by\n`eth_accounts` cannot be locked using this method.\n",
										"returns": "`true` if the account was locked successfully, `false` if the\naccount was already locked. Throws an error if the account could not be\nlocked.\n"
									},
									"parameters": [
										{
											"id": 83,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "address the address of the account to lock"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 501,
									"character": 30
								}
							]
						},
						{
							"id": 48,
							"name": "evm_mine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0",
										"max": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 49,
									"name": "evm_mine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Force a single block to be mined.",
										"text": "Mines a block independent of whether or not mining is started or stopped.\nWill mine an empty block if there are no available transactions to mine.\n",
										"returns": "The string `\"0x0\"`. May return additional meta-data in the future.\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nawait provider.send(\"evm_mine\", Date.now());\n```\n"
											},
											{
												"tag": "example",
												"text": "\n```javascript\nconsole.log(\"start\", await provider.send(\"eth_blockNumber\"));\nawait provider.send(\"evm_mine\", [{blocks: 5}]); // mines 5 blocks\nconsole.log(\"end\", await provider.send(\"eth_blockNumber\"));\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 50,
											"name": "timestamp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the timestamp the block should be mined with.\nEXPERIMENTAL: Optionally, specify an `options` object with `timestamp`\nand/or `blocks` fields. If `blocks` is given, it will mine exactly `blocks`\n number of blocks, regardless of any other blocks mined or reverted during it's\noperation. This behavior is subject to change!\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "stringLiteral",
												"value": "0x0"
											}
										],
										"name": "Promise"
									}
								},
								{
									"id": 51,
									"name": "evm_mine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 52,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 53,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 55,
															"name": "blocks",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 231,
																	"character": 10
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 54,
															"name": "timestamp",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 230,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																55,
																54
															]
														}
													],
													"sources": [
														{
															"fileName": "chains/ethereum/ethereum/src/api.ts",
															"line": 229,
															"character": 25
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "stringLiteral",
												"value": "0x0"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 228,
									"character": 16
								},
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 229,
									"character": 16
								},
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 234,
									"character": 16
								}
							]
						},
						{
							"id": 72,
							"name": "evm_revert",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 73,
									"name": "evm_revert",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Revert the state of the blockchain to a previous snapshot. Takes a single\nparameter, which is the snapshot id to revert to. This deletes the given\nsnapshot, as well as any snapshots taken after (Ex: reverting to id 0x1\nwill delete snapshots with ids 0x1, 0x2, etc... If no snapshot id is\npassed it will revert to the latest snapshot.",
										"returns": "`true` if a snapshot was reverted, otherwise `false`\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst snapshotId = await provider.send(\"evm_snapshot\");\nconst isReverted = await provider.send(\"evm_revert\", [snapshotId]);\n```\n"
											},
											{
												"tag": "example",
												"text": "\n```javascript\nconst provider = ganache.provider();\nconst [from, to] = await provider.send(\"eth_accounts\");\nconst startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from]));\n\n// take a snapshot\nconst snapshotId = await provider.send(\"evm_snapshot\");\n\n// send value to another account (over-simplified example)\nawait provider.send(\"eth_subscribe\", [\"newHeads\"]);\nawait provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}]);\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\n\n// ensure balance has updated\nconst newBalance = await provider.send(\"eth_getBalance\", [from]);\nassert(BigInt(newBalance) < startingBalance);\n\n// revert the snapshot\nconst isReverted = await provider.send(\"evm_revert\", [snapshotId]);\nassert(isReverted);\n\nconst endingBalance = await provider.send(\"eth_getBalance\", [from]);\nassert.strictEqual(BigInt(endingBalance), startingBalance);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 74,
											"name": "snapshotId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the snapshot id to revert"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 429,
									"character": 18
								}
							]
						},
						{
							"id": 62,
							"name": "evm_setAccountNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 63,
									"name": "evm_setAccountNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the given account's nonce to the specified value. Mines a new block\nbefore returning.",
										"text": "Warning: this will result in an invalid state tree.\n",
										"returns": "`true` if it worked\n"
									},
									"parameters": [
										{
											"id": 64,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "address"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 65,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "nonce"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 325,
									"character": 27
								}
							]
						},
						{
							"id": 56,
							"name": "evm_setStorageAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "3",
										"max": "4"
									}
								}
							],
							"signatures": [
								{
									"id": 57,
									"name": "evm_setStorageAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 58,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "bigint"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 60,
											"name": "storage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 61,
											"name": "blockNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Tag"
													}
												]
											},
											"defaultValue": "Tag.LATEST"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 266,
									"character": 24
								}
							]
						},
						{
							"id": 69,
							"name": "evm_setTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0",
										"max": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 70,
									"name": "evm_setTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the internal clock time to the given timestamp.",
										"text": "Warning: This will allow you to move *backwards* in time, which may cause\nnew blocks to appear to be mined before old blocks. This is will result in\nan invalid state.\n",
										"returns": "The amount of *seconds* between the given timestamp and now.\n"
									},
									"parameters": [
										{
											"id": 71,
											"name": "time",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Date"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 370,
									"character": 19
								}
							]
						},
						{
							"id": 75,
							"name": "evm_snapshot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 76,
									"name": "evm_snapshot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Snapshot the state of the blockchain at the current block. Takes no\nparameters. Returns the id of the snapshot that was created. A snapshot can\nonly be reverted once. After a successful `evm_revert`, the same snapshot\nid cannot be used again. Consider creating a new snapshot after each\n`evm_revert` if you need to revert to the same point multiple times.",
										"returns": "The hex-encoded identifier for this snapshot\n",
										"tags": [
											{
												"tag": "example",
												"text": "\n```javascript\nconst snapshotId = await provider.send(\"evm_snapshot\");\n```\n"
											},
											{
												"tag": "example",
												"text": "\n```javascript\nconst provider = ganache.provider();\nconst [from, to] = await provider.send(\"eth_accounts\");\nconst startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from]));\n\n// take a snapshot\nconst snapshotId = await provider.send(\"evm_snapshot\");\n\n// send value to another account (over-simplified example)\nawait provider.send(\"eth_subscribe\", [\"newHeads\"]);\nawait provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}]);\nawait provider.once(\"message\"); // Note: `await provider.once` is non-standard\n\n// ensure balance has updated\nconst newBalance = await provider.send(\"eth_getBalance\", [from]);\nassert(BigInt(newBalance) < startingBalance);\n\n// revert the snapshot\nconst isReverted = await provider.send(\"evm_revert\", [snapshotId]);\nassert(isReverted);\n\nconst endingBalance = await provider.send(\"eth_getBalance\", [from]);\nassert.strictEqual(BigInt(endingBalance), startingBalance);\n```\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 473,
									"character": 20
								}
							]
						},
						{
							"id": 77,
							"name": "evm_unlockUnknownAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 78,
									"name": "evm_unlockUnknownAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Unlocks any unknown account.",
										"returns": "`true` if the account was unlocked successfully, `false` if the\naccount was already unlocked. Throws an error if the account could not be\nunlocked.\n"
									},
									"parameters": [
										{
											"id": 79,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "address the address of the account to unlock"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 80,
											"name": "duration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "(default: disabled) Duration in seconds how long the account\nshould remain unlocked for. Set to 0 to disable automatic locking."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 486,
									"character": 32
								}
							]
						},
						{
							"id": 92,
							"name": "miner_setEtherbase",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 93,
									"name": "miner_setEtherbase",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sets the etherbase, where mining rewards will go."
									},
									"parameters": [
										{
											"id": 94,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "address\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 559,
									"character": 26
								}
							]
						},
						{
							"id": 95,
							"name": "miner_setExtra",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 96,
									"name": "miner_setExtra",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Set the extraData block header field a miner can include."
									},
									"parameters": [
										{
											"id": 97,
											"name": "extra",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "extra\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 569,
									"character": 22
								}
							]
						},
						{
							"id": 89,
							"name": "miner_setGasPrice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 90,
									"name": "miner_setGasPrice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 91,
											"name": "number",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Sets the minimal accepted gas price when mining transactions.\nAny transactions that are below this limit are excluded from the mining\nprocess.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 549,
									"character": 25
								}
							]
						},
						{
							"id": 84,
							"name": "miner_start",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0",
										"max": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 85,
									"name": "miner_start",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Resume the CPU mining process with the given number of threads.",
										"text": "Note: `threads` is ignored.",
										"returns": "true\n"
									},
									"parameters": [
										{
											"id": 86,
											"name": "threads",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "(ignored)"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 521,
									"character": 19
								}
							]
						},
						{
							"id": 87,
							"name": "miner_stop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 88,
									"name": "miner_stop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Stop the CPU mining operation."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 537,
									"character": 18
								}
							]
						},
						{
							"id": 105,
							"name": "net_listening",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 106,
									"name": "net_listening",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns `true` if client is actively listening for network connections.",
										"returns": "`true` when listening, otherwise `false`.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 617,
									"character": 21
								}
							]
						},
						{
							"id": 107,
							"name": "net_peerCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 108,
									"name": "net_peerCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns number of peers currently connected to the client.",
										"returns": "integer of the number of connected peers.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Quantity"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 626,
									"character": 21
								}
							]
						},
						{
							"id": 103,
							"name": "net_version",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 104,
									"name": "net_version",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the current network id.",
										"returns": "The current network id. This value should NOT be JSON-RPC\nQuantity/Data encoded.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 608,
									"character": 19
								}
							]
						},
						{
							"id": 338,
							"name": "personal_importRawKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 339,
									"name": "personal_importRawKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Imports the given unencrypted private key (hex string) into the key store, encrypting it with the passphrase.",
										"returns": "Returns the address of the new account.\n"
									},
									"parameters": [
										{
											"id": 340,
											"name": "rawKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "rawKey"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 341,
											"name": "passphrase",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "passphrase"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1776,
									"character": 29
								}
							]
						},
						{
							"id": 333,
							"name": "personal_listAccounts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 334,
									"name": "personal_listAccounts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns all the Ethereum account addresses of all keys that have been\nadded.",
										"returns": "the Ethereum account addresses of all keys that have been added.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1738,
									"character": 29
								}
							]
						},
						{
							"id": 342,
							"name": "personal_lockAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 343,
									"name": "personal_lockAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Locks the account. The account can no longer be used to send transactions."
									},
									"parameters": [
										{
											"id": 344,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1800,
									"character": 28
								}
							]
						},
						{
							"id": 335,
							"name": "personal_newAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 336,
									"name": "personal_newAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Generates a new account with private key. Returns the address of the new\naccount.",
										"returns": "The new account's address\n"
									},
									"parameters": [
										{
											"id": 337,
											"name": "passphrase",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "passphrase"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1749,
									"character": 27
								}
							]
						},
						{
							"id": 350,
							"name": "personal_sendTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 351,
									"name": "personal_sendTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Validate the given passphrase and submit transaction.",
										"text": "The transaction is the same argument as for eth_sendTransaction and\ncontains the from address. If the passphrase can be used to decrypt the\nprivate key belonging to tx.from the transaction is verified, signed and\nsend onto the network. The account is not unlocked globally in the node\nand cannot be used in other RPC calls.\n"
									},
									"parameters": [
										{
											"id": 352,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 353,
											"name": "passphrase",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "passphrase\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1845,
									"character": 32
								}
							]
						},
						{
							"id": 345,
							"name": "personal_unlockAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2",
										"max": "3"
									}
								}
							],
							"signatures": [
								{
									"id": 346,
									"name": "personal_unlockAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Unlocks the account for use.",
										"text": "The unencrypted key will be held in memory until the unlock duration\nexpires. The unlock duration defaults to 300 seconds. An explicit duration\nof zero seconds unlocks the key until geth exits.\n\nThe account can be used with eth_sign and eth_sendTransaction while it is\nunlocked.",
										"returns": "true if it worked. Throws an error if it did not.\n"
									},
									"parameters": [
										{
											"id": 347,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "20 Bytes - The address of the account to unlock."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 348,
											"name": "passphrase",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Passphrase to unlock the account."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 349,
											"name": "duration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "(default: 300) Duration in seconds how long the account\nshould remain unlocked for. Set to 0 to disable automatic locking."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "300"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1820,
									"character": 30
								}
							]
						},
						{
							"id": 354,
							"name": "rpc_modules",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 355,
									"name": "rpc_modules",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 356,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 357,
															"name": "eth",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 60,
																	"character": 5
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "1.0"
															},
															"defaultValue": "\"1.0\""
														},
														{
															"id": 361,
															"name": "evm",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 64,
																	"character": 5
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "1.0"
															},
															"defaultValue": "\"1.0\""
														},
														{
															"id": 358,
															"name": "net",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 61,
																	"character": 5
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "1.0"
															},
															"defaultValue": "\"1.0\""
														},
														{
															"id": 362,
															"name": "personal",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 65,
																	"character": 10
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "1.0"
															},
															"defaultValue": "\"1.0\""
														},
														{
															"id": 359,
															"name": "rpc",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 62,
																	"character": 5
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "1.0"
															},
															"defaultValue": "\"1.0\""
														},
														{
															"id": 360,
															"name": "web3",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "chains/ethereum/ethereum/src/api.ts",
																	"line": 63,
																	"character": 6
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "1.0"
															},
															"defaultValue": "\"1.0\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																357,
																361,
																358,
																362,
																359,
																360
															]
														}
													]
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1872,
									"character": 19
								}
							]
						},
						{
							"id": 370,
							"name": "shh_addToGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 371,
									"name": "shh_addToGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Adds a whisper identity to the group",
										"returns": "true if the identity was successfully added to the group, otherwise false.\n"
									},
									"parameters": [
										{
											"id": 372,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The identity address to add to a group."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1917,
									"character": 22
								}
							]
						},
						{
							"id": 380,
							"name": "shh_getFilterChanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 381,
									"name": "shh_getFilterChanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Polling method for whisper filters. Returns new messages since the last call of this method.",
										"returns": "More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges\n"
									},
									"parameters": [
										{
											"id": 382,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The filter id. Ex: \"0x7\""
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1954,
									"character": 28
								}
							]
						},
						{
							"id": 383,
							"name": "shh_getMessages",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 384,
									"name": "shh_getMessages",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages.",
										"returns": "See: shh_getFilterChanges\n"
									},
									"parameters": [
										{
											"id": 385,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The filter id. Ex: \"0x7\""
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1965,
									"character": 23
								}
							]
						},
						{
							"id": 365,
							"name": "shh_hasIdentity",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 366,
									"name": "shh_hasIdentity",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if the client hold the private keys for a given identity.",
										"returns": "returns true if the client holds the privatekey for that identity, otherwise false.\n"
									},
									"parameters": [
										{
											"id": 367,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The identity address to check."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1896,
									"character": 23
								}
							]
						},
						{
							"id": 373,
							"name": "shh_newFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "2"
									}
								}
							],
							"signatures": [
								{
									"id": 374,
									"name": "shh_newFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates filter to notify, when client receives whisper message matching the filter options.",
										"returns": "returns true if the identity was successfully added to the group, otherwise false.\n"
									},
									"parameters": [
										{
											"id": 375,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "-\n^(optional) Identity of the receiver. When present it will try to decrypt any incoming message\n if the client holds the private key to this identity."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 376,
											"name": "topics",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Array of DATA topics which the incoming message's topics should match."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1931,
									"character": 21
								}
							]
						},
						{
							"id": 368,
							"name": "shh_newGroup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 369,
									"name": "shh_newGroup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a new group.",
										"returns": "the address of the new group.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1906,
									"character": 20
								}
							]
						},
						{
							"id": 363,
							"name": "shh_newIdentity",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 364,
									"name": "shh_newIdentity",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates new whisper identity in the client.",
										"returns": "result - the address of the new identity.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1885,
									"character": 23
								}
							]
						},
						{
							"id": 386,
							"name": "shh_post",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 387,
									"name": "shh_post",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a whisper message and injects it into the network for distribution.",
										"returns": "returns true if the message was sent, otherwise false.\n"
									},
									"parameters": [
										{
											"id": 388,
											"name": "postData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "WhisperPostObject"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1976,
									"character": 16
								}
							]
						},
						{
							"id": 377,
							"name": "shh_uninstallFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 378,
									"name": "shh_uninstallFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Uninstalls a filter with given id. Should always be called when watch is no longer needed.\nAdditionally Filters timeout when they aren't requested with shh_getFilterChanges for a period of time.",
										"returns": "true if the filter was successfully uninstalled, otherwise false.\n"
									},
									"parameters": [
										{
											"id": 379,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The filter id. Ex: \"0x7\""
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1943,
									"character": 27
								}
							]
						},
						{
							"id": 389,
							"name": "shh_version",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 390,
									"name": "shh_version",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the current whisper protocol version.",
										"returns": "The current whisper protocol version\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 1986,
									"character": 19
								}
							]
						},
						{
							"id": 98,
							"name": "web3_clientVersion",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "0"
									}
								}
							],
							"signatures": [
								{
									"id": 99,
									"name": "web3_clientVersion",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns the current client version.",
										"returns": "The current client version.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 586,
									"character": 26
								}
							]
						},
						{
							"id": 100,
							"name": "web3_sha3",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "assertArgLength",
									"type": {
										"type": "reference",
										"name": "assertArgLength"
									},
									"arguments": {
										"min": "1"
									}
								}
							],
							"signatures": [
								{
									"id": 101,
									"name": "web3_sha3",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Returns Keccak-256 (not the standardized SHA3-256) of the given data.",
										"returns": "The SHA3 result of the given string.\n"
									},
									"parameters": [
										{
											"id": 102,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the data to convert into a SHA3 hash."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "chains/ethereum/ethereum/src/api.ts",
									"line": 596,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								21
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								19,
								9,
								8,
								18,
								15,
								20
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								44,
								46,
								40,
								31,
								35,
								26,
								326,
								308,
								175,
								177,
								304,
								179,
								117,
								109,
								173,
								181,
								123,
								119,
								130,
								127,
								185,
								133,
								268,
								274,
								287,
								189,
								135,
								139,
								194,
								300,
								212,
								149,
								153,
								143,
								146,
								157,
								171,
								169,
								261,
								265,
								263,
								113,
								241,
								238,
								244,
								248,
								165,
								160,
								252,
								115,
								271,
								258,
								66,
								81,
								48,
								72,
								62,
								56,
								69,
								75,
								77,
								92,
								95,
								89,
								84,
								87,
								105,
								107,
								103,
								338,
								333,
								342,
								335,
								350,
								345,
								354,
								370,
								380,
								383,
								365,
								373,
								368,
								363,
								386,
								377,
								389,
								98,
								100
							]
						}
					],
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 109,
							"character": 32
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "Api"
						}
					]
				},
				{
					"id": 402,
					"name": "TypedData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 70,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "stringLiteral",
									"value": "data"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "unknown",
										"name": "1"
									},
									"objectType": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "query",
												"queryType": {
													"type": "reference",
													"name": "signTypedData_v4"
												}
											}
										],
										"name": "Parameters"
									}
								}
							},
							{
								"type": "reference",
								"name": "NotTypedData"
							}
						],
						"name": "Exclude"
					}
				},
				{
					"id": 392,
					"name": "CLIENT_VERSION",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 57,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "`Ganache/v${version}/EthereumJS TestRPC/v${version}/ethereum-js`"
				},
				{
					"id": 393,
					"name": "PROTOCOL_VERSION",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 58,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "Data"
					},
					"defaultValue": "Data.from(\"0x3f\")"
				},
				{
					"id": 394,
					"name": "RPC_MODULES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 59,
							"character": 17
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 395,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 396,
									"name": "eth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 60,
											"character": 5
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "1.0"
									},
									"defaultValue": "\"1.0\""
								},
								{
									"id": 400,
									"name": "evm",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 64,
											"character": 5
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "1.0"
									},
									"defaultValue": "\"1.0\""
								},
								{
									"id": 397,
									"name": "net",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 61,
											"character": 5
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "1.0"
									},
									"defaultValue": "\"1.0\""
								},
								{
									"id": 401,
									"name": "personal",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 65,
											"character": 10
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "1.0"
									},
									"defaultValue": "\"1.0\""
								},
								{
									"id": 398,
									"name": "rpc",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 62,
											"character": 5
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "1.0"
									},
									"defaultValue": "\"1.0\""
								},
								{
									"id": 399,
									"name": "web3",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "chains/ethereum/ethereum/src/api.ts",
											"line": 63,
											"character": 6
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "1.0"
									},
									"defaultValue": "\"1.0\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										396,
										400,
										397,
										401,
										398,
										399
									]
								}
							]
						}
					},
					"defaultValue": "{\n  eth: \"1.0\",\n  net: \"1.0\",\n  rpc: \"1.0\",\n  web3: \"1.0\",\n  evm: \"1.0\",\n  personal: \"1.0\"\n} as const"
				},
				{
					"id": 391,
					"name": "version",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 53,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 403,
					"name": "assertExceptionalTransactions",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 404,
							"name": "assertExceptionalTransactions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 405,
									"name": "transactions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "RuntimeTransaction"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "chains/ethereum/ethereum/src/api.ts",
							"line": 77,
							"character": 38
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						402
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						392,
						393,
						394,
						391
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						403
					]
				}
			],
			"sources": [
				{
					"fileName": "chains/ethereum/ethereum/src/api.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1
			]
		}
	]
}